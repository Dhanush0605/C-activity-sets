Reading symbols from a.exe...
(gdb) r
Starting program: /c/Users/Dhanush DN/Documents/c-activity-sets/set02/a.exe
[New Thread 8400.0x2f50]
[New Thread 8400.0x4578]
[New Thread 8400.0x2478]
Enter the size of the array: 5
Enter 5 numbers:
1
2
7
8
12
Sum of composite numbers: 20
[Thread 8400.0x2dac exited with code 0]
[Thread 8400.0x4578 exited with code 0]
[Thread 8400.0x2478 exited with code 0]
[Inferior 1 (process 8400) exited normally]
(gdb) l
1       #include <stdio.h>
2
3       int input_array_size();
4       void input_array(int n, int a[n]);
5       int is_composite(int num);
6       int sum_composite_numbers(int n, int a[n]);
7       void output(int sum);
8
9       int main() {
10          int size = input_array_size();
(gdb) l
11          int array[size];
12          input_array(size, array);
13          int sum = sum_composite_numbers(size, array);
14          output(sum);
15          return 0;
16      }
17
18      int input_array_size() {
19          int size;
20          printf("Enter the size of the array: ");
(gdb) l
21          scanf("%d", &size);
22          return size;
23      }
24
25      void input_array(int n, int a[n]) {
26          printf("Enter %d numbers:\n", n);
27          for (int i = 0; i < n; i++) {
28              scanf("%d", &a[i]);
29          }
30      }
(gdb) l
31
32      int is_composite(int num) {
33          if (num <= 1)
34              return 0;
35          for (int i = 2; i * i <= num; i++) {
36              if (num % i == 0)
37                  return 1;
38          }
39          return 0;
40      }
(gdb) l
41
42      int sum_composite_numbers(int n, int a[n]) {
43          int sum = 0;
44          for (int i = 0; i < n; i++) {
45              if (is_composite(a[i])) {
46                  sum += a[i];
47              }
48          }
49          return sum;
50      }
(gdb) l
51
52      void output(int sum) {
53          printf("Sum of composite numbers: %d\n", sum);
54      }
